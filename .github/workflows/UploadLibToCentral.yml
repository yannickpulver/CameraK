name: Upload KMP Library to Maven Central

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Import and configure GPG key for signing
      - name: Import GPG private key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      # Decode and save the signing key for Gradle
      - name: Decode and save signing key
        run: |
          echo "${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}" | base64 --decode > secring.gpg

      - name: Publish to Maven Central
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingSecretKeyRingFile: ${{ github.workspace }}/secring.gpg
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingKeyPassphrase: ${{ secrets.PASSPHRASE }}
        run: |
          ./gradlew publishAllPublicationsToMavenCentral --no-configuration-cache --stacktrace --info

      # Clean up the signing key after publishing
      - name: Clean up signing key
        if: always()
        run: |
          rm secring.gpg
          gpg --batch --yes --delete-secret-keys ${{ secrets.SIGNING_KEY_ID }}
